generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model TokenValidation {
  id                    Int      @id @default(autoincrement())
  client_id             String
  client_secret         String
  access_token          String
  token_expiration      DateTime
  refresh_token         String
  user_code             String?
  authorization_code    String?
  auth_verification_code String?
  verification_url      String?
  verification_url_full String?
}

model Lojas {
  id_loja        Int      @id @default(autoincrement())
  nome           String
  status         Int      // Substituindo o enum por Int
  horario_operacao DateTime?  // Campo opcional
  data_criacao   DateTime @default(now())
  localizacao    Bytes?   // Para permitir null
  Vendas         Vendas[]
  Operacoes      Operacao[]
  Clientes       Clientes[]
}

model Vendas {
  id_venda       Int      @id @default(autoincrement())
  loja           Lojas    @relation(fields: [id_loja], references: [id_loja])
  id_loja        Int
  data_hora      DateTime
  valor_total    Float
  ticket_medio   Float?   // Aceita nulos
  tipo_cliente   Int      // Substituindo o enum por Int
  cancelada      Boolean  @default(false)
  promocao_aplicada Boolean @default(false)
  roi            Float?
}

model Operacao {
  id_operacao    Int      @id @default(autoincrement())
  loja           Lojas    @relation(fields: [id_loja], references: [id_loja])
  id_loja        Int
  data_hora_inicio DateTime
  data_hora_fim   DateTime?
  tempo_total     Int?    // TIMESTAMPDIFF será calculado na aplicação
  cancelamentos   Int     @default(0)
  erros_plataforma Int
}

model Clientes {
  id_cliente     Int      @id @default(autoincrement())
  nome           String?
  loja           Lojas    @relation(fields: [id_loja], references: [id_loja])
  id_loja        Int
  distancia_raio Float
  tipo           Int      // Substituindo o enum por Int
  data_ultima_compra DateTime?
}
